swagger: '2.0'
info:
  title: Mock Mook
  version: 1.0.0
  description: Site de cours en ligne
schemes:
  - http
tags:
  - name: User
    description: Gestion des utilisateurs
  - name: Module
    description: Gestion des cours
  - name: Path
    description: Gestion des parcours
  - name: Ressource
    description: Gestion des ressources

consumes:
  - application/json

paths:
  /user/signup:
    post:
      tags:
        - User
      summary: Enregistrer un nouvel utilisateur
      parameters:
        - type: string
          required: true
          in: query
          name: pseudo
        - type: string
          required: true
          in: query
          name: password
      responses:
        '201':
          description: utilisateur ajouté avec succès
          schema:
            type: object
            properties:
              token:
                type: string
              idUser:
                type: string
        '403':
          description: L'utilisateur ne peut être crée
  /user/login:
    post:
      tags:
        - User
      summary: Connecter un utilisateur
      parameters:
        - name: pseudo
          type: string
          required: true
          in: query
        - type: string
          required: true
          in: query
          name: password
      responses:
        '200':
          description: utilisateur connecté avec succès
          schema:
            type: object
            properties:
              token:
                type: string
              idUser:
                type: string
        '401':
          description: mot de passe incorrecte
        '404':
          description: pseudo incorrecte
  /Module:
    put:
      tags:
        - Module
      summary: ajouter un cours
      security:
        - basicAuth: [ ]
      parameters:
        - name: title
          description: title du cours
          type: string
          in: query
        - name: description
          type: string
          in: query
          required: true
        - name: pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorization
          in: header
          required: true
        - name: path
          description: Parcours au quel le cours est lié
          type: string
          in: header
          required: false

      responses:
        '201':
          description: le cours a été ajouté avec succès
        '401':
          description: Erreur d'authentification
        '403':
          description: Impossible d'ajouter le cours sélectionné
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                example: path not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
    get:
      tags:
        - Module
      summary: Récupérer tous les cours

      responses:
        200:
          description: liste récupérée avec succès
          schema:
            type: array
            items:
              type: object
              properties:
                idModule:
                  type: string
                idPath:
                  type: string
                title:
                  type: string
                  example: Express NodeJS
                description:
                  type: string
                  example: Un langage javascript pour réaliser des API REST
                idCreator:
                  type: string
                path:
                  type: object
                  properties:
                    title:
                      type: string
                      example: L'architecture MEAN
                    idPath:
                      type: string
  /Module/findByKeyWord:
    get:
      tags:
        - Module
      parameters:
        - name: keyWord
          type: string
          in: query
          required: true
      responses:
        200:
          description: Retourne la liste des cours contenant le mot recherché
          schema:
            type: array
            items:
              type: object
              properties:
                title:
                  type: string
                  example: NodeJS
                description:
                  type: string
                  example: NodeJS, un framework JavaScrip
                creator:
                  type: string
                path:
                  type: string
        404:
          description: Aucun cours trouvé
  /Module/{idModule}:
    put:
      tags:
        - Module
      summary: modifier un cours
      security:
        - basicAuth: [ ]
      parameters:
        - name: idModule
          type: string
          required: true
          in: path
        - name: title
          description: title du cours
          type: string
          in: query
        - name: description
          type: string
          in: query
          required: true
        - name: pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorization
          in: header
          required: true
        - name: path
          description: path au quel le cours est lié
          type: string
          in: query
          required: false


      responses:
        '200':
          description: Le cours a été modifié avec succès
        '401':
          description: Erreur d'authentification
        '403':
          description: Impossible de modifier le cours sélectionné
          schema:
            type: object
            properties:
              error:
                type: string
                example: you are not the owner
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: path not found
    get:
      tags:
        - Module
      summary: Récupérer un cours
      parameters:
        - name: idModule
          type: string
          in: path
          required: true
      responses:
        200:
          description: liste récupérée avec succès
          schema:
            type: object
            properties:
              idModule:
                type: string
              idPath:
                type: string
              title:
                type: string
                example: Express NodeJS
              description:
                type: string
                example: Un langage javascript pour réaliser des API REST
              idCreator:
                type: string
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: module not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
    delete:
      tags:
        - Module
      security:
        - basicAuth: [ ]
      parameters:
        - name: idModule
          type: string
          in: path
          required: true
        - name: token
          type: string
          in: header
          required: true
      responses:
        200:
          description: Cours supprimé avec succès
        401:
          description: Erreur d'authentification
        403:
          description: Impossible de supprimer le cours sélectionné
        404:
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: path not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
  /path:
    put:
      tags:
        - Path
      summary: ajouter un parcours
      security:
        - basicAuth: [ ]
      parameters:
        - name: title
          description: title du parcours
          type: string
          in: query
          required: true
        - name: description
          type: string
          in: query
        - name: pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorisation
          in: header
          required: true


      responses:
        '201':
          description: le parcours a été ajouté avec succès
        '500':
          description: une erreur s'est produite pendant la connexion au serveur
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: path
    get:
      tags:
        - Path
      summary: Donne la liste de tous les parcours

      responses:
        '200':
          description: le parcours a été trouvé avec succès
          schema:
            type: array
            items:
              type: object
              properties:
                idPath:
                  type: string
                title:
                  type: string
                description:
                  type: string
        '500':
          description: une erreur s'est produite pendant la connexion au serveur

  /path/{idPath}/:
    put:
      tags:
        - Path
      summary: modifie un parcours
      security:
        - basicAuth: [ ]
      parameters:
        - name: title
          description: title du parcours
          type: string
          in: query
          required: true
        - name: description
          type: string
          in: query
        - name: pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorisation
          in: header
          required: true

      responses:
        '200':
          description: le parcours a été modifié avec succès
        '401':
          description: Erreur d'authentification
        '403':
          description: Impossible de modifier le parcours sélectionné
          schema:
            type: object
            properties:
              error:
                type: string
                example: your are the owner
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                example: path not found
        '500':
          description: une erreur s'est produite pendant la connexion au serveur
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
    get:
      tags:
        - Path
      summary: Donne le parcours possédant idPath
      parameters:
        - name: idPath
          type: string
          in: path
          required: true

      responses:
        '200':
          description: le parcours a été trouvé avec succès
          schema:
            type: object
            properties:
              idPath:
                type: string
              title:
                type: string
              description:
                type: string
              Modules:
                type: array
                items:
                  type: object
                  properties:
                    idModule:
                      type: string
                    title:
                      type: string
                      example: Express NodeJS
                    description:
                      type: string
                      example: Un langage javascript pour réaliser des API REST
                    idCreator:
                      type: string
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                example: path not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string

    delete:
      tags:
        - Path
      summary: Supprime le parcours possédant idPath
      security:
        - basicAuth: [ ]

      parameters:
        - name: idPath
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorisation
          in: header
          required: true

      responses:
        '200':
          description: le parcours a été supprimé avec succès
        '401':
          description: Erreur d'authentification
        '403':
          description: Impossible de supprimer le parcours sélectionné
          schema:
            type: object
            properties:
              error:
                type: string
                example: you are not the owner
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: path not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
  /ressource:
    put:
      tags:
        - Ressource
      summary: Ajouter une ressource
      security:
        - basicAuth: [ ]
      parameters:
        - name: idModule
          type: string
          required: true
          in: query
        - name: url
          type: string
          in: query
          required: true
        - name: title
          type: string
          in: query
          required: true
        - name: description
          type: string
          in: query
        - name: token
          type: string
          in: header
          required: true
      responses:
        201:
          description: Ressources ajoutée avec succès
        401:
          description: Erreur d'authentification
        '403':
          description: Impossible de modifier le cours sélectionné
          schema:
            type: object
            properties:
              error:
                type: string
                example: you are not the owner
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: module not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
    get:
      tags:
        - Ressource
      summary: Récupérer toutes les ressources
      responses:
        200:
          description: Liste de toutes les ressources
          schema:
            type: array
            items:
              type: object
              properties:
                idRessource:
                  type: string
                url:
                  type: string
                  example: https://www.youtube.com/watch?v=0PA69L88HeI
                titre:
                  type: string
                  example: NodeJS c'est quoi ?
                description:
                  type: string
                  example: NodeJS est un framework JavaScript
  /ressource/{idRessource}:
    put:
      tags:
        - Ressource
      summary: Modifier une ressource
      security:
        - basicAuth: [ ]
      parameters:
        - name: idRessource
          type: string
          in: path
          required: true
        - name: pseudo
          type: string
          required: true
          in: query
        - name: description
          type: string
          in: query
        - name: token
          type: string
          in: header
          required: true
      responses:
        200:
          description: Ressource modifiée avec succès
        401:
          description: Erreur d'authentification
        '403':
          description: Impossible de modifier le cours sélectionné
          schema:
            type: object
            properties:
              error:
                type: string
                example: you are not the owner
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: module / resource not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
    get:
      tags:
        - Ressource
      summary: Récupérer une ressource
      parameters:
        - name: idRessource
          type: string
          in: path
          required: true
      responses:
        200:
          description: Ressource récupérée avec succès
          schema:
            type: object
            properties:
              id:
                type: string
              idModule:
                type: string
              url:
                type: string
                example: https://www.youtube.com/watch?v=0PA69L88HeI
              title:
                type: string
                example: NodeJS
                description: découverte de NodeJS

        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: module / resource not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string
    delete:
      tags:
        - Ressource
      summary: Supprimer une ressource
      security:
        - basicAuth: [ ]
      parameters:
        - name: idRessource
          type: string
          in: path
          required: true
        - name: token
          type: string
          in: header
          required: true
        - name: pseudo
          type: string
          in: query
          required: true
      responses:
        200:
          description: Ressource supprimée avec succès
        401:
          description: Erreur d'authentification
        '403':
          description: Impossible de modifier le cours sélectionné
          schema:
            type: object
            properties:
              error:
                type: string
                example: you are not the owner
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              error:
                type: string
                description: nom de la ressources non trouvée
                example: module / resource not found
        '500':
          description: Erreur serveur
          schema:
            type: object
            properties:
              erreur:
                type: string

host: localhost:3000
basePath: /api
