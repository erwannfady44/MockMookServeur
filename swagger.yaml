swagger: '2.0'
info:
  title: Mock Mook
  version: 1.0.0
  description: Site de cours en ligne
tags:
  - name: User
    description: Gestion des utilisateurs
  - name: Classe
    description: Gestion des cours
  - name: Path
    description: Gestion des parcours
  - name: Ressource
    description: Gestion des ressources

consumes:
  - application/json

paths:
  /user/signup:
    post:
      tags:
        - User
      summary: Enregistrer un nouvel utilisateur
      parameters:
        - type: string
          required: true
          in: query
          name: pseudo
        - type: string
          required: true
          in: query
          name: mail
        - type: string
          required: true
          in: query
          name: password
      responses:
        '201':
          description: utilisateur ajouté avec succès
          schema:
            type: object
            properties:
              token:
                type: string
              id:
                type: string
        '403':
          description: L'utilisateur ne peut être crée
  /user/login:
    post:
      tags:
        - User
      summary: Connecter un utilisateur
      parameters:
        - name: mail
          type: string
          required: true
          in: query
        - type: string
          required: true
          in: query
          name: password
      responses:
        '200':
          description: utilisateur connecté avec succès
          schema:
            type: object
            properties:
              token:
                type: string
              id:
                type: string
        '401':
          description: mot de passe incorrecte
        '404':
          description: adresse mail incorrecte
  /classe:
    put:
      tags:
        - Classe
      summary: ajouter un cours
      security:
        - basicAuth: [ ]
      parameters:
        - name: Titre
          description: titre du cours
          type: string
          in: query
          required: true
        - name: Description
          type: string
          in: query
          required: true
        - name: Pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorization
          in: header
          required: true
        - name: Parcours
          description: Parcours au quel le cours est lié
          type: string
          in: header
          required: false


      responses:
        '201':
          description: le cours a été ajouté avec succès
        '401':
          description: Erreur d'authentification
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path
  /classe/{classe}:
    put:
      tags:
        - Classe
      summary: modifier un cours
      security:
        - basicAuth: [ ]
      parameters:
        - name: idClasse
          type: string
          required: true
          in: path
        - name: title
          description: titre du cours
          type: string
          in: query
          required: true
        - name: description
          type: string
          in: query
          required: true
        - name: pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorization
          in: header
          required: true
        - name: path
          description: Parcours au quel le cours est lié
          type: string
          in: header
          required: false


      responses:
        '201':
          description: le cours a été ajouté avec succès
        '401':
          description: Erreur d'authentification
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path
        '

  /path:
    put:
      tags:
        - Path
      summary: ajouter un parcours
      security:
        - basicAuth: [ ]
      parameters:
        - name: Titre
          description: titre du parcours
          type: string
          in: query
          required: true
        - name: Description
          type: string
          in: query
          required: true
        - name: Pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorisation
          in: header
          required: true


      responses:
        '201':
          description: le parcours a été ajouté avec succès
        '401':
          description: Erreur d'authentification
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path

    get:
      tags:
        - Path
      summary: Donne la liste de tous les parcours

      responses:
        '200':
          description: le parcours a été trouvé avec succès
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path

  /path/{idPath}/:
    put:
      tags:
        - Path
      summary: modifie un parcours
      security:
        - basicAuth: [ ]
      parameters:
        - name: Titre
          description: titre du parcours
          type: string
          in: query
          required: true
        - name: Description
          type: string
          in: query
          required: true
        - name: Pseudo
          type: string
          in: query
          required: true
        - name: token
          type: string
          description: Token d'autentification à mettre dans l'entête Authorisation
          in: header
          required: true


      responses:
        '201':
          description: le parcours a été modifié avec succès
        '401':
          description: Erreur d'authentification
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path

    get:
      tags:
        - Path
      summary: Donne le parcours possédant idPath

      responses:
        '200':
          description: le parcours a été trouvé avec succès
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path
    delete:
      tags:
        - Path
        summary: Supprime le parcours possédant idPath
        parameter:
          - name: idPath
            type: string
            in: path
            required: true
          - name: Pseudo
            type: string
            in: query
            required: true
          - name: token
            type: string
            description: Token d'autentification à mettre dans l'entête Authorisation
            in: header
            required: true

      responses:
        '200':
          description: le parcours a été supprimé avec succès
        '401':
          description: Erreur d'authentification
        '404':
          description: ressource non trouvée
          schema:
            type: object
            properties:
              not-found:
                type: string
                description: nom de la ressources non trouvée
                example: path


host: localhost:3000
basePath: /api
